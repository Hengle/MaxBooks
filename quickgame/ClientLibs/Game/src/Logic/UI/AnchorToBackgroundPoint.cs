//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
namespace xc.ui
{
    //anchor to a point of a full screen background 
    [ExecuteInEditMode]
    public class AnchorToBackgroundPoint :MonoBehaviour
    {
        public UITexture backGroundImg {get; set;}
        public int x;//from the lefet
        public int y;//from the top


        private void Awake()
        {

        }
        public void OnEnable()
        {
            Adjust();
        }

#if UNITY_EDITOR
        public void Update()
        {
            Adjust();
        }
#endif

        public void Adjust()
        {
            if (backGroundImg == null)
            {
                return;
            }
            Camera cam = NGUITools.FindInParents<UICamera>(transform).GetComponent<Camera>();
            int screenX = x * Screen.width / backGroundImg.mainTexture.width;
            int showHeight = Screen.width * backGroundImg.mainTexture.height / backGroundImg.mainTexture.width;
            int screenY = y * showHeight / backGroundImg.mainTexture.height;
            int blackheight = (Screen.height - Screen.width * backGroundImg.mainTexture.height / backGroundImg.mainTexture.width) / 2;
            screenY +=  blackheight;
            
            Vector3 pos = cam.ScreenToWorldPoint(new Vector3(screenX, screenY, transform.parent.position.z));
            gameObject.transform.position = pos;
            float widthScale = (float)Screen.width / backGroundImg.mainTexture.width;
            float heightScale = (float)Screen.height / 720;
            widthScale = widthScale / heightScale;
            gameObject.transform.localScale = new Vector3(widthScale, widthScale, widthScale);
        }
    }
}

